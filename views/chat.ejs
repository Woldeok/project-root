<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>채팅 애플리케이션</title>
    <script src="https://cdn.socket.io/4.0.0/socket.io.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }
        #chat-container {
            max-width: 600px;
            margin: auto;
        }
        #messages {
            border: 1px solid #ddd;
            height: 300px;
            overflow-y: scroll;
            padding: 10px;
            margin-bottom: 20px;
        }
        .message {
            margin-bottom: 10px;
        }
        .input-container {
            display: flex;
            gap: 10px;
        }
        #messageInput {
            flex-grow: 1;
            padding: 10px;
        }
        button {
            padding: 10px 20px;
        }
    </style>
</head>
<body>
    <div id="chat-container">
        <h1>채팅 애플리케이션</h1>
        <div id="messages"></div>
        <div class="input-container">
            <input type="text" id="messageInput" placeholder="메시지를 입력하세요">
            <button id="sendButton">전송</button>
        </div>
    </div>

    <script>
        const socket = io('http://localhost:<%= CHAT_SERVER_PORT %>'); // Socket.IO 서버와 연결
        const messagesDiv = document.getElementById('messages');
        const messageInput = document.getElementById('messageInput');
        const sendButton = document.getElementById('sendButton');

        // 메시지 표시 함수
        function addMessage(msg) {
            const messageElement = document.createElement('div');
            messageElement.className = 'message';
            messageElement.textContent = `${msg.username}: ${msg.text}`;
            messagesDiv.appendChild(messageElement);
            messagesDiv.scrollTop = messagesDiv.scrollHeight; // 자동 스크롤
        }

        // 메시지 수신
        socket.on('new-message', (msg) => {
            addMessage(msg);
        });

        // 메시지 전송
        sendButton.addEventListener('click', () => {
            const message = messageInput.value.trim();
            if (message) {
                socket.emit('new-message', message); // 서버로 메시지 전송
                messageInput.value = '';
            }
        });
    </script>
</body>
</html>
